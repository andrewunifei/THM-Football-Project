CREATE TABLE Venue (
    venue_id INTEGER PRIMARY KEY UNIQUE NOT NULL,
    name VARCHAR(100) NOT NULL,
    address VARCHAR(100) NOT NULL,
    city VARCHAR(50) NOT NULL,
    country VARCHAR(50) NOT NULL,
    capacity INTEGER NOT NULL,
    surface VARCHAR(25) NOT NULL,
    image VARCHAR(150) NOT NULL
);

CREATE TABLE Team (
    team_id INTEGER PRIMARY KEY UNIQUE NOT NULL,
    name VARCHAR(100) NOT NULL,
    code VARCHAR(25) NOT NULL,
    country VARCHAR(50) NOT NULL,
    founded INTEGER NOT NULL,
    national BOOLEAN NOT NULL,
    logo VARCHAR(150) NOT NULL,
    games_played_home INTEGER NOT NULL,
    games_played_away INTEGER NOT NULL,
    games_played_total INTEGER NOT NULL,
    wins_home INTEGER NOT NULL,
    wins_away INTEGER NOT NULL,
    wins_total INTEGER NOT NULL,
    draws_home INTEGER NOT NULL,
    draws_away INTEGER NOT NULL,
    draws_total INTEGER NOT NULL,
    losses_home INTEGER NOT NULL,
    losses_away INTEGER NOT NULL,
    losses_total INTEGER NOT NULL,
    goals_for_home INTEGER NOT NULL,
    goals_for_away INTEGER NOT NULL,
    goals_for_total INTEGER NOT NULL,
    segments_for JSONB NOT NULL,
    goals_against_home INTEGER NOT NULL,
    goals_against_away INTEGER NOT NULL,
    goals_against_total INTEGER NOT NULL,
    segments_against JSONB NOT NULL, 
    biggest_win_home VARCHAR(10) NOT NULL,
    biggest_win_away VARCHAR(10) NOT NULL,
    biggest_loss_home VARCHAR(10) NOT NULL,
    biggest_loss_away VARCHAR(10) NOT NULL,
    clean_sheet_home INTEGER NOT NULL,
    clean_sheet_away INTEGER NOT NULL,
    clean_sheet_total INTEGER NOT NULL,
    failed_to_score_home INTEGER NOT NULL,
    failed_to_score_away INTEGER NOT NULL,
    failed_to_score_total INTEGER NOT NULL,
    penalty_scored INTEGER NOT NULL,
    penalty_missed INTEGER NOT NULL,
    yellow_cards JSONB NOT NULL,  
    red_cards JSONB NOT NULL,      
    venue_id INTEGER REFERENCES Venue(venue_id) ON DELETE SET NULL
);

CREATE TABLE Player (
    player_id INTEGER PRIMARY KEY UNIQUE NOT NULL,
    name VARCHAR(100),
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    age INTEGER,
    position VARCHAR(50),
    birth JSONB,
    nationality VARCHAR(50),
    height VARCHAR(100),
    weight VARCHAR(100),
    injured BOOLEAN,
    photo VARCHAR(150),
    games_appearences INTEGER,
    games_lineups INTEGER,
    minutes_played_total INTEGER,
    rating VARCHAR(50),
    substitutes_in INTEGER,
    substitutes_out INTEGER,
    bench INTEGER,
    shots_on INTEGER,
    shots_total INTEGER,
    goals_total INTEGER,
    goals_conceded INTEGER,
    goals_assists INTEGER,
    goals_saved INTEGER,
    passes_total INTEGER,
    passes_key INTEGER,
    passes_accuracy INTEGER,
    tackles_total INTEGER,
    tackles_blocks INTEGER,
    tackles_interceptions INTEGER,
    duels_total INTEGER,
    duels_won_total INTEGER,
    dribbles_attempts_total INTEGER,
    dribbles_success_total INTEGER,
    dribbles_past_total INTEGER,
    fouls_drawn_total INTEGER,
    fouls_committed_total INTEGER,
    cards_yellow_total INTEGER,
    cards_red_total INTEGER,
    penalty_won_total INTEGER,
    penalty_committed_total INTEGER,
    penalty_scored_total INTEGER,
    penalty_missed_total INTEGER,
    penalty_saved_total INTEGER,
    team_id INTEGER REFERENCES Team(team_id) ON DELETE SET NULL
);

CREATE TABLE TeamsHistoric (
    player_id INTEGER REFERENCES Player(player_id) ON DELETE CASCADE NOT NULL,
    team_id INTEGER REFERENCES Team(team_id) ON DELETE CASCADE NOT NULL,
    seasons INTEGER[],
    PRIMARY KEY (player_id, team_id)
);

CREATE TABLE Game (
    game_id INTEGER PRIMARY KEY UNIQUE NOT NULL,
    referee VARCHAR(100),
    timezone VARCHAR(100),
    date TIMESTAMP(6),
    first_period INTEGER,
    second_period INTEGER,
    score JSONB,
    home_team_goals INTEGER,
    away_team_goals INTEGER,
    venue_id INTEGER REFERENCES Venue(venue_id) ON DELETE CASCADE NOT NULL,
    home_team_id INTEGER REFERENCES Team(team_id) ON DELETE CASCADE NOT NULL,
    away_team_id INTEGER REFERENCES Team(team_id) ON DELETE CASCADE NOT NULL,
    winner_team_id INTEGER REFERENCES Team(team_id) ON DELETE CASCADE NOT NULL
);

CREATE TABLE Injury (
    player_id INTEGER REFERENCES Player(player_id) ON DELETE CASCADE NOT NULL,
    game_id INTEGER REFERENCES Game(game_id) ON DELETE CASCADE NOT NULL,
    type VARCHAR(50) CHECK (type IN ('Missing Fixture', 'Questionable')),
    reason VARCHAR(100),
    PRIMARY KEY (player_id, game_id)
);

-- SG stands for "Single Game"
CREATE TABLE SGTeamStatistics (
    game_id INTEGER REFERENCES Game(game_id) ON DELETE CASCADE NOT NULL,
    team_id INTEGER REFERENCES Team(team_id) ON DELETE CASCADE NOT NULL,
    shots_on_goal INTEGER,
    shots_off_goal INTEGER,
    total_shots INTEGER,
    blocked_shots INTEGER,
    shots_insidebox INTEGER,
    shots_outsidebox INTEGER,
    fouls INTEGER,
    corner_kicks INTEGER,
    offsides INTEGER,
    yellow_cards INTEGER,
    red_cards INTEGER,
    goalkeeper_saves INTEGER,
    total_passes INTEGER,
    passes_accurate INTEGER,
    ball_possession DECIMAL(5, 2) CHECK (ball_possession >= 0 AND ball_possession <= 100),
    passes_percentage DECIMAL(5, 2) CHECK (passes_percentage >= 0 AND passes_percentage <= 100),
    PRIMARY KEY (game_id, team_id)
);

-- SG stands for "Single Game"
CREATE TABLE SGPlayerStatistics (
    player_id INTEGER REFERENCES Player(player_id) ON DELETE CASCADE NOT NULL,
    game_id INTEGER REFERENCES Game(game_id) ON DELETE CASCADE NOT NULL,
    player_number INTEGER,
    position CHAR(5),
    rating DECIMAL(2, 2) CHECK (rating >= 0 AND rating <= 10),
    captain BOOLEAN,
    substitute BOOLEAN,
    offsides INTEGER,
    shots_on INTEGER,
    shots_total INTEGER,
    goals_total INTEGER,
    goals_conceded INTEGER,
    goals_assists INTEGER,
    goals_saves INTEGER,
    passes_total INTEGER,
    passes_key INTEGER,
    passes_accuracy DECIMAL(5, 2) CHECK (passes_accuracy >= 0 AND passes_accuracy <= 100),
    tackles_total INTEGER,
    blocks INTEGER,
    interceptions INTEGER,
    duels_total INTEGER,
    duels_won INTEGER,
    dribbles_attempts INTEGER,
    dribbles_success INTEGER,
    dribbles_past INTEGER,
    fouls_drawn INTEGER,
    fouls_committed INTEGER,
    yellow_cards INTEGER,
    red_cards INTEGER,
    penalty_won INTEGER,
    penalty_committed INTEGER,
    penalty_scored INTEGER,
    penalty_missed INTEGER,
    penalty_saved INTEGER,
    PRIMARY KEY (player_id, game_id)
);